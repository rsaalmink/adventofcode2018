from collections import Counter

data = [
"cvfueihajytpmrdkgsxfqplbxn",
"cbzueihajytnmrdkgtxfqplbwn",
"cvzucihajytomrdkgstfqplqwn",
"cvzueilajytomrdkgsxfqwnbwn",
"cvzueihajytomrdkgsgwqphbwn",
"wuzuerhajytomrdkgsxfqplbwn",
"cyzueifajybomrdkgsxfqplbwn",
"cvzueihajxtomrdkgpxfqplmwn",
"ivzfevhajytomrdkgsxfqplbwn",
"cvzueihajytomrdlgsxfqphbbn",
"uvzueihajjtomrdkgsxfqpobwn",
"cvzupihajytomrdkgsxfqplpwe",
"cvzueihajyvomrdkgsxfqplbrl",
"cczueihajytomrdkgsnfqpxbwn",
"cvzueigajytdmrdkgsxyqplbwn",
"cvzujihljytomrdkgsxuqplbwn",
"cvzueisajytomrddgsxkqplbwn",
"cvzneihajytomrdkgsgaqplbwn",
"cvzueihajytomrdkgsinmplbwn",
"cveueihajyromrdkgsxfqplown",
"cypueihajytotrdkgzxfqplbwn",
"cvzuoihajytomvdqgsxfqplbwn",
"cvzuekhejytwmrdkgsxfqplbwn",
"cvzseihajytomrdkgsxfqgmbwn",
"cvfuhihajytomrdkgsxfqplbwi",
"cvzueihujxtomrdkgsufqplbwn",
"cvzueihdjytomrdogsxfqplbwh",
"cvzueihdjyfohrdkgsxfqplbwn",
"cvtudihajytolrdkgsxfqplbwn",
"cvzueihajytymrdkgshzqplbwn",
"cvzuebhajytomxdkgsxfqplbwt",
"cvzulihajyxomrdkgsbfqplbwn",
"cvzueihajywomrdkgsxfqplbts",
"cvzueihajytouodkdsxfqplbwn",
"cvzueihajytomgdkgqxfqklbwn",
"cvzubihajytomvdkgsxfqplmwn",
"cvhueihajyyocrdkgsxfqplbwn",
"zvzueihajytourdkgsxflplbwn",
"cvzbeihajytomadkgsxfoplbwn",
"cvzueihajytomrdkgnxfqplbsl",
"cvfueihajftkmrdkgsxfqplbwn",
"cvzuexhajytomryugsxfqplbwn",
"cvzueihajytomsckgsxfqalbwn",
"cvzuexhajytomrdkbsxfqpluwn",
"cvzueihajytbmrtkgsxwqplbwn",
"cvzueihajytomrdigsxfqqlbsn",
"cvzweihajytomydkgsxfmplbwn",
"bvzteihajytimrdkgsxfqplbwn",
"cvzueihajytpmrdkgsxfcpbbwn",
"cvzueigsjltomrdkgsxfqplbwn",
"cvzueihajytomrikgsxfopldwn",
"cvzueihajstomrdkgsxfqplgon",
"cvzueimajytomrnkxsxfqplbwn",
"cvzleihagatomrdkgsxfqplbwn",
"cvbueihajotomrdkgsxfqjlbwn",
"cvzueihajytomrdkgsxfqppnvn",
"hvzueihajytomrdkghxfkplbwn",
"cvzueigajytxmrdkgsxfqplbjn",
"cvzueihaaxtokrdkgsxfqplbwn",
"cvzueihajyeomrdkgujfqplbwn",
"cvzueiwajpoomrdkgsxfqplbwn",
"cvzieidtjytomrdkgsxfqplbwn",
"cvzueihalytomrakbsxfqplbwn",
"wtzueihajytomrdkgsxfqplbwq",
"cvzuelhaiytomrdkgsxfqplcwn",
"cvzueihajytomrdkgsxfqslswd",
"cvzueihajytomrykgssfqplbon",
"cvzueihfjytovrdegsxfqplbwn",
"cvzueihajytomldqgsxfqplbwy",
"cvzleihjjytomrtkgsxfqplbwn",
"cvzueihaldtomrdtgsxfqplbwn",
"cvzueihajytzmrdkgsxfeplqwn",
"cvzueihrjytomddkgsxfqpgbwn",
"cyzulihajytokrdkgsxfqplbwn",
"cvsueihajytoordfgsxfqplbwn",
"fvzueyhajytomrdkgaxfqplbwn",
"cczueihajytobrdkgsefqplbwn",
"cvzueihajytomcdrgscfqplbwn",
"cvzuexhajyvomrdkgssfqplbwn",
"cvzsmihajyiomrdkgsxfqplbwn",
"cvzzeihajttomrdkgsxzqplbwn",
"cvzseihajytomrdkgsxfqpebvn",
"cvzueihajgthmrdkgsbfqplbwn",
"ruzueihajytomrdkgsxfqphbwn",
"cvzueihajytofrdkgsnfrplbwn",
"cvzuetdajytojrdkgsxfqplbwn",
"fvzueihajytomrdkghxfqpobwn",
"cvzueihsjytomrdkgsxfqglbxn",
"cvzueihajytowrdkgsxfqpsbun",
"cvzteihaiytomrdkfsxfqplbwn",
"cvzueihajytkmrdkrsxfqplvwn",
"cvzueihajyoomrdkasxfqjlbwn",
"lvzurihajytkmrdkgsxfqplbwn",
"cvzueihajyyomrdagsxfqelbwn",
"cvfueihajytomrdkgsxfqplbbx",
"cvwueihajytommdkgkxfqplbwn",
"cvzucicajytomrdkgsxcqplbwn",
"dvzueihahytgmrdkgsxfqplbwn",
"cvzuechajytomrdkgsxfqelwwn",
"cvzuekhajytomrdkgsxknplbwn",
"cvtueihajytomphkgsxfqplbwn",
"cvzueihabytnzrdkgsxfqplbwn",
"cvzusihajytomrdkgfxfqplban",
"cvfueihajytomcdfgsxfqplbwn",
"mvzueihapytomrdkgsxfdplbwn",
"cvzueihajytomhdkgsxmqppbwn",
"jvsueihajytomrdkgsxfqplbln",
"cvzujihajybomrdkgsxtqplbwn",
"cvzuekhawytomrdkgsxfqplbwc",
"svzueihanytomrdogsxfqplbwn",
"cvzujihajytodrdkgslfqplbwn",
"cvgdeihajytorrdkgsxfqplbwn",
"cvzbeihajytoprdkgsxfqplbyn",
"cvzueihkyytomjdkgsxfqplbwn",
"cvzuelhojytomrdkgsxfqjlbwn",
"evzueihajytimrdkgsxfqpsbwn",
"cvzueihajydomrdkjsxfqplbjn",
"ovzteihajytosrdkgsxfqplbwn",
"cvzueihajyaomrdzgsxfqplbgn",
"cvzuewhajmtomrdkgsufqplbwn",
"cvzueihajqtomhukgsxfqplbwn",
"cvzueihajytomzqkgsxfqplbwk",
"cazuewhakytomrdkgsxfqplbwn",
"clzueihatytomrdkgzxfqplbwn",
"dvzueihajytomqdkgsxfqpnbwn",
"cvzueidajdtomrdkgsxtqplbwn",
"cvzueihabytowrdkgsxoqplbwn",
"cvzujihwjytomrdkgsxeqplbwn",
"cvtuedhajytomrdkgsxfqplbbn",
"cvzueihajcgomrdkgsxfqplswn",
"cvzuephajyiomrdngsxfqplbwn",
"cvzueihajythmqdkgsxfqplbwf",
"cvzueitajytomrdkgsxfepvbwn",
"cvzueihajytomydkgsxfqplvwb",
"dvzueshajytomrddgsxfqplbwn",
"cvzueihajytomrdkgvxfqpwben",
"cvzueihajytomrdkgvxfpplwwn",
"cvzuefhajftomrdkgsxfqrlbwn",
"cvzueihajytpmrvkgsxfqplbcn",
"cvzueihajytohrdkgsxfqxnbwn",
"cvzueihajytomrdposxfqulbwn",
"cozueihajytomrpkgsxfqrlbwn",
"cvzuuihaxytomrdkgsxfqplbtn",
"cvzueihajytomrbzgsxyqplbwn",
"cveueihajyxoqrdkgsxfqplbwn",
"cvzueihajytomrkkgsxfqptbrn",
"cvzuezhajatomrdkssxfqplbwn",
"cpzueihajytomrdkgsxfhplbwo",
"lviueihajytomrekgsxfqplbwn",
"cvzueihwjytomrdkusxfyplbwn",
"cvzgeihajytomwdkgsxfrplbwn",
"cvzsejhzjytomrdkgsxfqplbwn",
"cvzuuihajytomrdkgsxfqdlbwz",
"cvzjeihajytomrdugsxftplbwn",
"cvzueihaxytomrrkgsxfmplbwn",
"cvzueihajgtomrdhgsxfqplwwn",
"cvzulihajytomedkgsxfqplewn",
"cvzueivajytomrdkmsxfqplbwc",
"cvzuervajytomrdkgsxfwplbwn",
"cvzuemhcjytomrdkgslfqplbwn",
"cvzyerhauytomrdkgsxfqplbwn",
"cvzueihaoytomrdkgsyfqplewn",
"cvzueihanytomrdkgsafkplbwn",
"cvzueihajvtomrdugsxfqpcbwn",
"chzueihajytamrdxgsxfqplbwn",
"cvzueihalytomrdsgsxfqplbln",
"cvzueihajytoyaykgsxfqplbwn",
"tlzueihajyeomrdkgsxfqplbwn",
"cvpueihajytbmrdkgsxfxplbwn",
"cvzueihajytomjdkgsxuqplkwn",
"cvzueihajygomrdkgkxfqplbwg",
"cvzueihajhtomrdkgbxsqplbwn",
"cvzurihajytomrdkgsafqplbwx",
"cdzuezhajytomrdkgsxrqplbwn",
"cvbueihajytotrwkgsxfqplbwn",
"cwzkeihajytomrdkgsxfqplbwh",
"cvzheihajytolrikgsxfqplbwn",
"cozuevhajytomrdkgkxfqplbwn",
"chzueihajytomrjkgsxfqulbwn",
"cvzueihkjyromrdkgsxvqplbwn",
"cvzveihajytomrdkgsxpqplnwn",
"cvzueihajytoirdkgsxfqihbwn",
"cvoueihajytomrdkgsxfqpdawn",
"pvzueihajytomrdkgnxfqplbfn",
"cvzueihakytomxdkgssfqplbwn",
"cvzueivajytomrdbgsxaqplbwn",
"cvzueihajytokrdkgszrqplbwn",
"cvzuevhajytomrdkgsxgqplbwi",
"cvzueihajylomrdkgsxflplbpn",
"hvzueihajytomvdkgsxfqplgwn",
"cvzleihajytymrrkgsxfqplbwn",
"crzueieajytomrdkgsxfqplbon",
"cszueihajytomrdlgqxfqplbwn",
"cvzueihacytomrdkgsxfjblbwn",
"cvzreihajytomrdkgsxfqplzun",
"cvzurihajytomrdkgsxiqplawn",
"uvzueihajyhovrdkgsxfqplbwn",
"cvzueihajyqodrdkgssfqplbwn",
"cvzwiihrjytomrdkgsxfqplbwn",
"cqzueihajytomrdkgjxfqplban",
"cvmueihajytoordkgsxfqplbyn",
"cypueihajytomrdkgzxfqplbwn",
"cvzueihajykomrdkgsmfqplbtn",
"cvzueidajytimrdkgsxfqpdbwn",
"cvzheihajytomrdkgsxfqpfewn",
"dvzueihajytumrdzgsxfqplbwn",
"cvzueixajytomrdkgsvfqplgwn",
"cvzuevhzjyzomrdkgsxfqplbwn",
"cvyeeihajytomrdkgsxnqplbwn",
"cvzueihajytomrdkggtpqplbwn",
"cvzceiyajytomrdkgexfqplbwn",
"cvzuelhajyyomrdkzsxfqplbwn",
"cvzhzihajygomrdkgsxfqplbwn",
"cvzueihwjytomrdkgsgfqplbrn",
"cvzsevhajytomrdkgqxfqplbwn",
"cvzueiuajytomrdkgsxfppebwn",
"nvzueihajytemrdkgsxwqplbwn",
"cvzueihajytocgdkgsxfqvlbwn",
"cczusihajytomrdkgsxfqplbpn",
"cmzueihajytomrdkbsxwqplbwn",
"cvzumfdajytomrdkgsxfqplbwn",
"cvzueihcjytomrdkgsxfqplbkl",
"cvzueihajytomawknsxfqplbwn",
"kvzueihijytomrdkgsxdqplbwn",
"cdzutihajytomrdkgsxfkplbwn",
"cvzufihadylomrdkgsxfqplbwn",
"cvzueihajytomrgkxsxfqphbwn",
"cvzuewhajyzomrdkgsxfqelbwn",
"cvzueihajytomrdkgqxfqelbwc",
"cvzueshajyoomrdkgsxfqflbwn",
"cvzueihajyromrekgixfqplbwn",
"chzugihajytomrdkgsxfqplawn",
"cvzueihajytomrdkgsxfhpmbwy",
"cvzueihacytodxdkgsxfqplbwn",
"cvzurihajytourdkgsdfqplbwn",
"cvzzeihmjytomrddgsxfqplbwn",
"cvzucyhajygomrdkgsxfqplbwn",
"ckzueihzjytomrdkgsxwqplbwn",
"cvlueihajmtozrdkgsxfqplbwn",
"cvzkeihajytomrdkgsxfqclbwc",
"cvzueihajytomrdkgsxgdplbwa",
"cvzueihyjytoxrdkgcxfqplbwn",
"cvzueizavytomfdkgsxfqplbwn",
"cvzueihajwtosrdkgsxfqllbwn",
"cvzueihajytomrdaksxfqpllwn",
"cvzuuihojytombdkgsxfqplbwn",
"cvzuiibajytpmrdkgsxfqplbwn",
"cvzueihajyuomydkgsxfqplzwn",
"cvzueihajytimrmkgsxfqplfwn",
"cvzueihajytomrdkgzxfqpljwo"

]


# PART 1
def part_1():
	twos, threes = 0,0
	for box in data:
		cnt = Counter(box)
		found_twos, found_threes = False, False
		for key in cnt:
			if cnt[key] == 3:
				found_threes = True
			if cnt[key] == 2:
				found_twos = True
		if found_twos:
			twos += 1
		if found_threes:
			threes += 1
	print(threes * twos)


# Part 2
def part_2():
	def distance_is_one(a,b):
		diff = []
		if len(a) == len(b):
			for i in range(len(a)-1):
				if a[i] != b[i]:
					diff.append(a[i])
			if len(diff) == 1:
				print(diff)
				return diff

	for i in range(len(data)-1):
		for j in range(i, len(data)-1):
			if distance_is_one(data[i], data[j]):
				print("".join([data[i][n] for n in range(len(data[i])) if data[i][n] == data[j][n]]))


part_1()
part_2()